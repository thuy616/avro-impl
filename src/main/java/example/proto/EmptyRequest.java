/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package example.proto;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class EmptyRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5400943644111119802L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EmptyRequest\",\"namespace\":\"example.proto\",\"fields\":[]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Creates a new EmptyRequest RecordBuilder.
   * @return A new EmptyRequest RecordBuilder
   */
  public static example.proto.EmptyRequest.Builder newBuilder() {
    return new example.proto.EmptyRequest.Builder();
  }
  
  /**
   * Creates a new EmptyRequest RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new EmptyRequest RecordBuilder
   */
  public static example.proto.EmptyRequest.Builder newBuilder(example.proto.EmptyRequest.Builder other) {
    return new example.proto.EmptyRequest.Builder(other);
  }
  
  /**
   * Creates a new EmptyRequest RecordBuilder by copying an existing EmptyRequest instance.
   * @param other The existing instance to copy.
   * @return A new EmptyRequest RecordBuilder
   */
  public static example.proto.EmptyRequest.Builder newBuilder(example.proto.EmptyRequest other) {
    return new example.proto.EmptyRequest.Builder(other);
  }
  
  /**
   * RecordBuilder for EmptyRequest instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EmptyRequest>
    implements org.apache.avro.data.RecordBuilder<EmptyRequest> {


    /** Creates a new Builder */
    private Builder() {
      super(example.proto.EmptyRequest.SCHEMA$);
    }
    
    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(example.proto.EmptyRequest.Builder other) {
      super(other);
    }
    
    /**
     * Creates a Builder by copying an existing EmptyRequest instance
     * @param other The existing instance to copy.
     */
    private Builder(example.proto.EmptyRequest other) {
            super(example.proto.EmptyRequest.SCHEMA$);
    }

    @Override
    public EmptyRequest build() {
      try {
        EmptyRequest record = new EmptyRequest();
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);  

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);  

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
  }

}
